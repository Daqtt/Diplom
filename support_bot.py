from telegram import (
    Bot,
    Update,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters,
)
import logging
from db_config import get_connection

# === CONFIG ===
BOT_TOKEN      = '7924338819:AAFqXKBFo3N24aGXGGLEfQLm9OE4kaxmXwQ'
ADMIN_PASSWORD = '0896ad'

logging.basicConfig(level=logging.INFO)

# –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å
authenticated_admins = set()       # chat_id –∞–¥–º–∏–Ω–æ–≤
awaiting_reply    = {}            # chat_id –∞–¥–º–∏–Ω ‚Üí user_id

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
kb_request_password = ReplyKeyboardMarkup(
    [['–í–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å']],
    resize_keyboard=True,
    one_time_keyboard=False
)

kb_admin = ReplyKeyboardMarkup(
    [['üì• –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏']],
    resize_keyboard=True,
    one_time_keyboard=False
)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–∏ /start –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
        "–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–í–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å¬ª –∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ.\n"
        "–û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        reply_markup=kb_request_password
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat.id
    text    = update.message.text.strip()

    # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–Ω–æ–ø–∫—É ¬´–í–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å¬ª ‚Äî –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Å–∞–º –ø–∞—Ä–æ–ª—å
    if text == '–í–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å' and chat_id not in authenticated_admins:
        await update.message.reply_text(
            "üîí –í–≤–µ–¥–∏—Ç–µ –∞–¥–º–∏–Ω-–ø–∞—Ä–æ–ª—å:",
            reply_markup=ReplyKeyboardRemove()  # —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∞
        )
        return

    # 1) –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    if chat_id not in authenticated_admins:
        # 1.1) –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if text == ADMIN_PASSWORD:
            authenticated_admins.add(chat_id)
            await update.message.reply_text(
                "‚úÖ –ü–∞—Ä–æ–ª—å –ø—Ä–∏–Ω—è—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫–∏:",
                reply_markup=kb_admin
            )
        # 1.2) –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —à–ª—ë–º –µ–≥–æ –∞–¥–º–∏–Ω–∞–º
        else:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ë–î
            conn = get_connection()
            with conn.cursor() as cur:
                cur.execute(
                    "INSERT INTO support_messages (user_id, from_admin, text, is_read) VALUES (%s, 0, %s, 0)",
                    (chat_id, text)
                )
                conn.commit()

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤
            for admin in authenticated_admins:
                await context.bot.send_message(
                    admin,
                    f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}:\n\n{text}",
                    reply_markup=kb_admin  # –∞–¥–º–∏–Ω—É –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏¬ª
                )
        return

    # 2) –ê–¥–º–∏–Ω —É–∂–µ –≤–æ—à—ë–ª ‚Üí –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ –∫–æ–º–∞–Ω–¥—ã
    if text == 'üì• –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏':
        # –¢—É—Ç –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –Ω–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä—è–º–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        conn = get_connection()
        with conn.cursor() as cur:
            cur.execute("""
                SELECT DISTINCT user_id
                  FROM support_messages
                 WHERE from_admin=0 AND is_read=0
            """)
            rows = cur.fetchall()

        if not rows:
            await update.message.reply_text("–ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫", reply_markup=kb_admin)
        else:
            buttons = [
                [InlineKeyboardButton(str(r['user_id']), callback_data=f"select:{r['user_id']}")]
                for r in rows
            ]
            markup = InlineKeyboardMarkup(buttons)
            await update.message.reply_text(
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞:",
                reply_markup=markup
            )
        return

    # 3) –ï—Å–ª–∏ –∞–¥–º–∏–Ω —É–∂–µ –Ω–∞–∂–∞–ª –Ω–∞ inline-–∫–Ω–æ–ø–∫—É ¬´–≤—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è¬ª
    #    —Ç–æ handle_callback —Ä–∞–∑–±–µ—Ä—ë—Ç –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ –º—ã

    # 4) –ï—Å–ª–∏ –∞–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞)
    if chat_id in awaiting_reply:
        user_id = awaiting_reply.pop(chat_id)
        reply   = text
        conn = get_connection()
        with conn.cursor() as cur:
            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞
            cur.execute(
                "INSERT INTO support_messages (user_id, from_admin, text, is_read) VALUES (%s, 1, %s, 1)",
                (user_id, reply)
            )
            # –æ—Ç–º–µ—á–∞–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
            cur.execute(
                "UPDATE support_messages SET is_read=1 WHERE user_id=%s AND from_admin=0",
                (user_id,)
            )
            conn.commit()

        await context.bot.send_message(user_id, f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {reply}")
        await context.bot.send_message(chat_id, f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.", reply_markup=kb_admin)
        return

    # –ò–Ω–∞—á–µ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    return


async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    cq = update.callback_query
    await cq.answer()
    admin_chat = cq.message.chat.id
    data = cq.data

    if data.startswith('select:'):
        _, uid = data.split(':', 1)
        awaiting_reply[admin_chat] = int(uid)
        await context.bot.send_message(
            admin_chat,
            f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {uid}:",
            reply_markup=ReplyKeyboardRemove()
        )


if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    # –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤—ã–¥–∞—ë–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏ –∫–Ω–æ–ø–∫–∏
    app.add_handler(CommandHandler('start', start))
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç inline-–∫–Ω–æ–ø–æ–∫
    app.add_handler(CallbackQueryHandler(handle_callback))
    # –í—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–¥—É—Ç –≤ handle_message
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("üöÄ Bot –∑–∞–ø—É—â–µ–Ω –≤ Polling-—Ä–µ–∂–∏–º–µ.")
    app.run_polling()

